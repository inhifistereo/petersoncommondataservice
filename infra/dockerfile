# Use the official .NET image as a build stage
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
WORKDIR /app
EXPOSE 80

# Use the SDK image to build the app
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src
COPY ["code/PetersonCommonDataService/PetersonCommonDataService.csproj", "code/PetersonCommonDataService/"]
RUN dotnet restore "code/PetersonCommonDataService/PetersonCommonDataService.csproj"
COPY . .
WORKDIR "/src/code/PetersonCommonDataService"
RUN dotnet build "PetersonCommonDataService.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "PetersonCommonDataService.csproj" -c Release -o /app/publish /p:UseAppHost=false

# Use the base image to run the app
FROM base AS final
WORKDIR /app

# Configure for production
ENV ASPNETCORE_ENVIRONMENT=Production
ENV ASPNETCORE_URLS=http://+:80
ENV Kestrel__Endpoints__Https__Url=""
ENV Kestrel__Endpoints__Http__Url="http://+:80"

# Create an empty wwwroot directory if needed
RUN mkdir -p /app/wwwroot

# Copy only the published app
COPY --from=publish /app/publish .

# Install curl for health check
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Add health check
HEALTHCHECK --interval=30s --timeout=3s \
  CMD curl -f http://localhost/health || exit 1

# Use a non-root user for security
RUN adduser --disabled-password --gecos "" appuser && chown -R appuser /app
USER appuser

# Add metadata labels
LABEL org.opencontainers.image.description="Peterson Common Data Service API"
LABEL org.opencontainers.image.created="${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}"

ENTRYPOINT ["dotnet", "PetersonCommonDataService.dll"]